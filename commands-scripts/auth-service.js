const chalk = require('chalk');
const prompts = require('prompts');

const help = async () => {
   const response = await prompts({
      type: 'select',
      name: 'value',
      message: 'Choose the command to execute',
      choices: [
        { title: 'Add', description: 'add a social configuration', value: 'add' },
        { title: 'Modify', description: 'modify a social configuration', value: 'modify' },
        { title: 'Remove', description: 'remove a social configuration', value: 'remove' }
      ],
      initial: 0
});
   return response;
}

const authService = async (args, ctx) => {
  console.log(chalk.blueBright("auth-service cli"))  
  const iosProj = ctx.project.ios
  const androidProj = ctx.project.android
  const rootProj = `${iosProj.sourceDir}/${iosProj.projectName.split(".")[0]}`
  const ios = {
      ios_info: `${rootProj}/Info.plist`,
      ios_appDelegate: `${rootProj}/AppDelegate.m`
   }
   const android = {
      android_strings: androidProj.stringsPath,
      android_manifest: androidProj.manifestPath
   }
   const options = {pathOptions:{...ios, ...android}, prepro: (text) => `// AUTO GENERATED by auth-service \n${text}\n // END AUTO GENERATED`}
   let command
   if (args.length  == 0 || args.includes("help") ){
     const response = await help();
     if(response.value){
       command = response.value
     }
   }else{
     command = args[0];
   }
   if(!["add", "modify", "remove"].includes(command)){
     console.log(chalk.red("Usage: react-native auth-service (add|modify|remove) (help)"))
     return
   }
   const commandToCall = require(`./${command}`).default;
   await commandToCall(args.slice(1), options)
};

module.exports = {authService}
